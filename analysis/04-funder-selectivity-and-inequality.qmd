---
title: "Funder selectivity and inequality in data sharing"
format: 
  html:
    code-fold: true
  #pdf: default
execute:
  keep-md: true
---

Research questions:
- What is the effect of a funding agencyâ€™s level of selectivity on the uptake of data sharing among research teams which allocate their resources strategically?
- What is the effect of the introduced policy on inequality of resources within the system?


Approach:

1. Reproduce the below analysis from individual data
2. Run across all three types of networks
3. Analyse inequality/how takes up sharing with lagged regression or similar

```{r, echo=FALSE, message=FALSE}
library(sparklyr)
library(patchwork)
library(dplyr)
library(ineq)
library(arrow)
library(here)

extrafont::loadfonts()
theme_set(theme_bw(base_family = "Hind"))

source(here("R/functions.R"))

Sys.setenv(SPARK_HOME = "/home/tklebel/spark-3.4.0-bin-hadoop3/")
Sys.setenv(HADOOP_HOME = "/home/hadoop/hadoop-3.3.1")
Sys.setenv(HADOOP_CONF_DIR = "/home/hadoop/hadoop-3.3.1/etc/hadoop")
Sys.setenv(YARN_HOME = "/home/hadoop/hadoop-3.3.1")
Sys.setenv(YARN_CONF_DIR = "/home/hadoop/hadoop-3.3.1/etc/hadoop")
Sys.setenv(JAVA_HOME="/usr/lib/jvm/java-1.11.0-openjdk-amd64")

config <- spark_config()
config$spark.executor.cores <- 5
config$spark.executor.instances <- 20
config$spark.executor.memory <- "20G"

sc <- spark_connect(master = "yarn", config = config,
                    app_name = "analyse_data")

no_network <- spark_read_parquet(
  sc, "no_network",
  path = "/tklebel/data_sharing_abm/vary_incentives_individuals_no_network_re_arranged.parquet",
  memory = TRUE
)

```


# Effect of grant size
```{r fig.width=7, fig.height=9}
#| label: fig-funder-selectivity
#| fig-cap: Gini index and % of groups sharing data dependent on grant size



small_sample <- no_network %>% 
  filter(run_number %in% c(1:5), step %in% c(1:5)) %>% 
  group_by(run_number, step, maxinitialutility, fundedshare, sharingincentive)

test2 <- small_sample %>% 
  spark_apply(aggregate_stats,
              group_by = c("run_number", "step")
              columns = list(
                step = "integer",
    resources_gini = "double",
    total_funding_gini = "double",
    perc_sharing = "double"
  ))

test2

```


```{r fig.width=7, fig.height=9}
aggregate_stats <- function(grouped_df) {
    
  # convert gini to local_function from inequ::Gini
  gini <- function (x, corr = FALSE, na.rm = TRUE) {
      if (!na.rm && any(is.na(x))) 
          return(NA_real_)
      x <- as.numeric(na.omit(x))
      n <- length(x)
      x <- sort(x)
      G <- sum(x * 1L:n)
      G <- 2 * G/sum(x) - (n + 1L)
      if (corr) 
          G/(n - 1L)
      else G/n
  }
    
      dplyr::summarise(grouped_df, resources_gini = gini(resources),
            total_funding_gini = gini(total_funding),
            perc_sharing = mean(as.numeric(shared_data)))
}


no_network %>% 
  sdf_nrow()


summarised_data <- no_network %>% 
  spark_apply(nrow, 
              group_by = c("run_number"),
              memory = FALSE)
  

test_res <- summarised_data %>% 
  head(200) %>% 
  collect()


  filter(step > 0) %>% 
  group_by(step, funded_share, max_initial_utility) %>% 
  summarise(mean_gini = mean(resources_gini),
            mean_cumulative_gini = mean(total_funding_gini),
            mean_sharing = mean(perc_sharing)) %>% 
  collect() %>% 
  mutate(max_initial_utility = recode(max_initial_utility, `4` = "Uniform initial sharing effort",
                                      `-4` = "Low initial sharing effort"),
         funded_share = scales::percent(funded_share, accuracy = 1))

n_row <- 1

p1 <- pdata %>%  
  ggplot(aes(step, mean_gini, colour = as.factor(funded_share))) +
  geom_line() +
    facet_wrap(vars(max_initial_utility), nrow = n_row) +
    labs(colour = "% of teams receiving funding",
       y = "Gini of current resources", x = NULL)

p2 <- pdata %>%  
  ggplot(aes(step, mean_cumulative_gini, colour = as.factor(funded_share))) +
  geom_line() +
    facet_wrap(vars(max_initial_utility), nrow = n_row) +
    labs(colour = "% of teams receiving funding",
       y = "Gini of total resources",
       x = "Step")

p3 <- pdata %>%  
  ggplot(aes(step, mean_sharing, colour = as.factor(funded_share))) +
  geom_line() +
  facet_wrap(vars(max_initial_utility), nrow = n_row) +
  labs(colour = "% of teams receiving funding",
       y = "% of teams sharing data", x = NULL) 

p3 / p1 / p2 +
  plot_layout(guides = "collect") +
  plot_annotation(tag_levels = "A") & theme(legend.position = "top")
```

```{r}
spark_disconnect(sc)
```

