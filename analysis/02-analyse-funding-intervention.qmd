---
title: "Analyse funding intervention"
format: 
  html:
    code-fold: true
execute:
  keep-md: true
---

```{r, echo=FALSE, message=FALSE}
library(patchwork)
library(tidyverse)
library(targets)
library(arrow)

source("R/functions.R")

theme_set(theme_bw())

options(dplyr.summarise.inform = FALSE)


setup_schema <- schema(
  `[run number]` = int64(), `initial-norm` = int64(), b_norm = int64(), 
  `sharing-incentive` = float64(), `application-penalty` = int64(), 
  `resources-dist` = utf8(), `sharing-costs?` = bool(), `proposal-sigma` = float64(), 
  `n-teams` = int64(), `originator-benefit` = float64(), `third-party-funding-ratio` = int64(), 
  `utility-change` = float64(), b_utility = int64(), network = utf8(), 
  `funded-share` = int64(), `redistribute-costs?` = bool(), 
  `data-sharing?` = bool(), `initial-utility` = int64(), `[step]` = int64(), 
  `gini [resources] of teams` = float64(), `gini [total-funding] of teams` = float64(), 
  `mean [effort] of teams` = float64(), `%-sharing` = int64(), 
  `mean-funding-within teams with [initial-resources-quantile = "q1"]` = float64(), 
  `mean-funding-within teams with [initial-resources-quantile = "q2"]` = float64(), 
  `mean-funding-within teams with [initial-resources-quantile = "q3"]` = float64(), 
  `mean-funding-within teams with [initial-resources-quantile = "q4"]` = float64(),
  `data-sharing-within teams with [initial-resources-quantile = "q1"]` = float64(), 
  `data-sharing-within teams with [initial-resources-quantile = "q2"]` = float64(), 
  `data-sharing-within teams with [initial-resources-quantile = "q3"]` = float64(), 
  `data-sharing-within teams with [initial-resources-quantile = "q4"]` = float64()
  )


df_all <- open_dataset(tar_read(intervention_file),
                   format = "csv", schema = setup_schema, skip = 1,
                   convert_options = CsvConvertOptions$create(
                     null_values = "<RuntimePrimitiveException>")
                   )

df <- select_intervention(df_all)

# work with lower proposal sigma for now
df <- df %>% 
  filter(proposal_sigma == .15)
```

# Effect of funder selectivity
```{r, fig.width=6, fig.height=6}
#| label: fig-vary-share-of-funded-teams
#| fig-cap: Gini index and % of groups sharing data dependent on grant size. 
#|          Funding incentive is fixed at 0.4.
no_network <- df %>% 
  filter(network == "none")
  
no_network_unif_dist <- no_network %>% 
  filter(init_dist == "uniform")


pdata <- no_network_unif_dist %>% 
  filter(sharing_incentive == .4) %>% 
  group_by(step, funded_share) %>% 
  summarise(mean_gini = mean(resources_gini),
            mean_cumulative_gini = mean(total_funding_gini),
            mean_sharing = mean(perc_sharing)) %>% 
  collect()

p1 <- pdata %>%  
  ggplot(aes(step, mean_gini, colour = as.factor(funded_share))) +
  geom_line() +
    labs(colour = "% of groups receiving funding",
       y = "Gini of current resources")

p2 <- pdata %>%  
  ggplot(aes(step, mean_cumulative_gini, colour = as.factor(funded_share))) +
  geom_line() +
    labs(colour = "% of groups receiving funding",
       y = "Gini of total resources")

p3 <- pdata %>%  
  ggplot(aes(step, mean_sharing, colour = as.factor(funded_share))) +
  geom_line() +
  labs(colour = "% of groups receiving funding",
       y = "% of groups sharing data") 

p1 / p2 / p3 +
  plot_layout(guides = "collect") +
  plot_annotation(tag_levels = "A") & theme(legend.position = "top")
```
The above is very interesting: we are not changing incentives, however sharing 
rate still varies widely. This is a consequence of how exposed agents are to
the funding agency. If only few are funded, not many come into contact. However,
if almost everyone is funded, the policy seems to work only very slowly, because
there is no advantage in sharing or not (because anyways almost everyone is
funded). It is also interesting that sharing initially rises, but then drops 
again (for low values of funded share). 

The Gini is a direct effect of selectivity of funding, as in the baseline 
scenario. The Gini of total resources initially falls, than rises, then falls 
again. 

> I'm not sure why this is the case or what it tells us.

# Effect of sharing incentive
There are multiple parameters varied in this experiment. For now we compare
Gini and share of sharers for low and medium funded share, holding network type
constant.

```{r, fig.width=6, fig.height=6}
#| label: fig-vary-sharing-incentive
#| fig-cap: "Gini index and % of groups sharing data dependant on funding 
#| incentive. The share of teams being funded is fixed at 25%."
no_network <- df %>% 
  filter(network == "none", funded_share == 25)

pdata <- no_network %>% 
  group_by(step, sharing_incentive) %>% 
  summarise(mean_gini = mean(resources_gini),
            mean_cumulative_gini = mean(total_funding_gini),
            mean_sharing = mean(perc_sharing)) %>% 
  collect()

p1 <- pdata %>%  
  ggplot(aes(step, mean_gini, colour = as.factor(sharing_incentive))) +
  geom_line() +
  labs(colour = "Incentive for sharing data",
       y = "Gini of current resources")

p2 <- pdata %>%  
  ggplot(aes(step, mean_cumulative_gini, colour = as.factor(sharing_incentive))) +
  geom_line() +
  labs(colour = "Incentive for sharing data",
       y = "Gini of total resources")

p3 <- pdata %>%  
  ggplot(aes(step, mean_sharing, colour = as.factor(sharing_incentive))) +
  geom_line() +
  labs(colour = "Incentive for sharing data",
       y = "% of groups sharing data") 

p1 / p2 / p3 +
  plot_layout(guides = "collect") +
  plot_annotation(tag_levels = "A") & theme(legend.position = "top")
```

This is very interesting. The incentive for sharing data has a substantial 
influence on whether agents share data or not. With no incentive, only about 25%
of groups share data (which is still high? They "should not" share data, given
that it is costly?). With moderate incentives (0.2 and 0.4) sharing is higher 
(up to about 50%). Strinkingly, between those two cases there is not much 
difference in terms of % of teams sharing, and the Gini of total resources in
the long run. In the short run, higher incentives lead to higher sharing and 
lower inequality, but this aligns later on.

For even higher settings of incentives, sharing reaches high levels, up to 75%,
with much lower inequality in total resources.

I now assume that the 25%/75% border is just a result of how the study was set 
up in terms of agent behaviour.

One key question is why stronger incentives to share data lead to
more equitable resource distributions. Presumably there is more 
mixing: some groups are successful with, and some without sharing data, and this
changes. When there is no incentive, there is more path dependency
in funding.

The overall setup is still not representative of what I would perceive as "true"
agent behaviour: If there was an incentive, agents would know it and potentially
adapt. From ON-MERRIT and the literature, we assume this is easier for 
high-resource actors. This type of interaction is precluded from our model.

Here, data sharing is more an alternative strategy to success: if sharing is 
rewarded, teams with lower resources (= prestige and publication track record)
have equal chances of getting funding simply by starting to share data.

# Interact funded share and funding incentive
```{r, fig.width=12, fig.height=8}
#| label: fig-incentive-funded-share
#| fig-cap: "Effect of funding incentive on (A) rate of sharing, (B) Gini
#|           of current resources and (C) Gini of total resources. 
#|           The rows represent the varying rate of funded teams in %. Uniform 
#|           starting distribution."
no_network <- df %>% 
  filter(network == "none")

pdata <- no_network %>% 
  select(run_number, sharing_incentive, funded_share, step, perc_sharing, 
         resources_gini, total_funding_gini) %>% 
  group_by(sharing_incentive, funded_share, step) %>% 
  summarise(mean_gini = mean(resources_gini),
            mean_cumulative_gini = mean(total_funding_gini),
            mean_sharing = mean(perc_sharing)) %>% 
  collect() %>% 
  pivot_longer(c(mean_gini, mean_cumulative_gini, mean_sharing)) %>% 
  mutate(sharing_incentive = as.factor(sharing_incentive))

p_gini <- pdata %>% 
  filter(name == "mean_gini") %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(funded_share), ncol = 1) +
  labs(y = "Mean Gini of current resources")

p_gini_total <- pdata %>% 
  filter(name == "mean_cumulative_gini") %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(funded_share), ncol = 1) +
  labs(y = "Mean Gini of total resources")

p_sharing <- pdata %>% 
  filter(name == "mean_sharing") %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(funded_share), ncol = 1) +
  labs(y = "Mean % of teams sharing data")

p_sharing + p_gini + p_gini_total +
  plot_layout(guides = "collect") +
  plot_annotation(tag_levels = "A") &
  theme(legend.position = "top")
```

The results are fascinating. First, a high incentive for sharing, as implemented
in our model, does not seem either (a) necessary nor (b) the best strategy to
achieve high sharing.

Considering the case of 10% teams funded each round: Sharing uptake is equally 
quick regardless of incentive. Sharing has a higher equilibrium the higher the
sharing incentive is. Equity is higher (lower Gini) for higher sharing 
incentives. The same is true for the case of 25% funded teams, however the share
of teams sharing data is higher. This is likely a result of more teams coming 
into contact with the funder. 

However, once we consider the case of 50% of teams being funded each round,
dynamics change substantially. Gini is lower, in line with more teams being
funded. Higher incentives still lead to higher rates of sharing over the long
term. The rate of uptake however is very different and much slower for higher
sharing incentives. When taken to its extreme (80% of teams funded each round),
there is no uptake of data sharing for high incentive settings (above 0.5).

One open question to investigate is why equity is higher for higher sharing
incentives. This might be because there might be more randomness in how 
proposals are evaluated. But this needs to be checked in greater detail, i.e., 
how this edge case works in the nitty-gritty details.

# Network effects
Investigate network effects for cases of 10% and 50% funded teams.

```{r, fig.width=12, fig.height=8}
#| label: fig-incentive-network-10perc
#| fig-cap: "Effect of funding incentive on (A) rate of sharing and (B) Gini
#|           coefficient. 
#|           The rows represent the network configurations. Uniform 
#|           starting distribution. 10% funded teams."

pdata <- df %>% 
  filter(funded_share %in% c(10, 50)) %>% 
  select(run_number, sharing_incentive, funded_share, step, perc_sharing, 
         resources_gini, network, total_funding_gini) %>% 
  group_by(sharing_incentive, funded_share, network, step) %>% 
  summarise(mean_gini = mean(resources_gini),
            mean_cumulative_gini = mean(total_funding_gini),
            mean_sharing = mean(perc_sharing)) %>% 
  collect() %>% 
  pivot_longer(c(mean_gini, mean_cumulative_gini, mean_sharing)) %>% 
  mutate(sharing_incentive = as.factor(sharing_incentive))

p_gini <- pdata %>% 
  filter(name == "mean_gini", funded_share == 10) %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(network), ncol = 1) +
  labs(y = "Mean Gini of current resources")

p_gini_total <- pdata %>% 
  filter(name == "mean_cumulative_gini", funded_share == 10) %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(network), ncol = 1) +
  labs(y = "Mean Gini of total resources")

p_sharing <- pdata %>% 
  filter(name == "mean_sharing", funded_share == 10) %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(network), ncol = 1) +
  labs(y = "Mean % of teams sharing data")

p_sharing + p_gini + p_gini_total +
  plot_layout(guides = "collect") +
  plot_annotation(tag_levels = "A") &
  theme(legend.position = "top")
```

```{r, fig.width=12, fig.height=8}
#| label: fig-incentive-network-50perc
#| fig-cap: "Effect of funding incentive on (A) rate of sharing and (B) Gini
#|           coefficient. 
#|           The rows represent the network configurations. Uniform 
#|           starting distribution. 50% funded teams."

p_gini <- pdata %>% 
  filter(name == "mean_gini", funded_share == 50) %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(network), ncol = 1) +
  labs(y = "Mean Gini of current resources")

p_gini_total <- pdata %>% 
  filter(name == "mean_cumulative_gini", funded_share == 50) %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(network), ncol = 1) +
  labs(y = "Mean Gini of total resources")

p_sharing <- pdata %>% 
  filter(name == "mean_sharing", funded_share == 50) %>% 
  ggplot(aes(step, value, colour = sharing_incentive)) +
  geom_line() +
  facet_wrap(vars(network), ncol = 1) +
  labs(y = "Mean % of teams sharing data")

p_sharing + p_gini + p_gini_total +
  plot_layout(guides = "collect") +
  plot_annotation(tag_levels = "A") &
  theme(legend.position = "top")
```


In a general sense, the presence of networks leads to lower sharing rates in the
long run. For the case of 10% funded teams (@fig-incentive-network-10perc),
there is a strong pendulum at first,
with sharing going up and down. In the long run, all sharing incentives lead to
relatively low sharing rates (below 30%). Might it be that the network effect
trumps the utility assessment that each team does? If I implemented it 
correctly, network and utility effect should be equally strong. 

For the case of 50% funded teams (@fig-incentive-network-50perc),
data sharing is not taking place at all. 
This is likely to some extent driven by the fact that data sharing is at 0 when 
starting the simulation. I consider very low initial sharing rates to be a 
a realistic scenario.

# Uptake across quartiles

# Open questions

- Why is a higher sharing incentive leading to lower Gini? 
