---
title: "Analysis of funder selectivity"
format: 
  html:
    code-fold: true
  #pdf: default
execute:
  keep-md: true
---

Research questions:
- What is the effect of a funding agencyâ€™s level of selectivity on the uptake of data sharing among research teams which allocate their resources strategically?


Approach:

1. Reproduce the below analysis from new simulation file
2. Run across all three types of networks
3. Back up claims by individual data

```{r, echo=FALSE, message=FALSE}
library(sparklyr)
library(ggplot2)
library(patchwork)
library(dplyr)
library(arrow)
library(here)

extrafont::loadfonts()
theme_set(theme_bw(base_family = "Hind"))

source(here("R/functions.R"))

Sys.setenv(SPARK_HOME = "/home/tklebel/spark-3.4.0-bin-hadoop3/")
Sys.setenv(HADOOP_HOME = "/home/hadoop/hadoop-3.3.1")
Sys.setenv(HADOOP_CONF_DIR = "/home/hadoop/hadoop-3.3.1/etc/hadoop")
Sys.setenv(YARN_HOME = "/home/hadoop/hadoop-3.3.1")
Sys.setenv(YARN_CONF_DIR = "/home/hadoop/hadoop-3.3.1/etc/hadoop")
Sys.setenv(JAVA_HOME="/usr/lib/jvm/java-1.11.0-openjdk-amd64")

config <- spark_config()
config$spark.executor.cores <- 5
config$spark.executor.instances <- 20
config$spark.executor.memory <- "20G"

sc <- spark_connect(master = "yarn", config = config,
                    app_name = "funding_selectivity")

df <- spark_read_csv(
  sc, "vary_incentives",
  path = "/tklebel/data_sharing_abm/vary_incentives.csv.bz2",
  memory = TRUE
)

```


```{r fig.width=7, fig.height=9}
summarised_data <- df %>% 
  filter(step > 0, sharingincentive == .4) %>% 
  group_by(step, fundedshare, maxinitialutility, network) %>% 
  summarise(mean_gini = mean(gini_resources_of_turtles),
            mean_cumulative_gini = mean(gini_totalfunding_of_turtles),
            mean_sharing = mean(sharing)) %>% 
  collect() %>% 
  mutate(maxinitialutility = recode(maxinitialutility, `4` = "Uniform initial sharing effort",
                                      `-4` = "Low initial sharing effort"),
         fundedshare = scales::percent(fundedshare, accuracy = 1))
```

```{r}
n_row <- 1

plot_skeleton <- function(df, var) {
  df %>%  
    ggplot(aes(step, {{ var }}, colour = as.factor(fundedshare))) +
    geom_line() +
    facet_wrap(vars(maxinitialutility), nrow = n_row) +
    colorspace::scale_colour_discrete_qualitative()
}

summary_plot <- function(df) {
  p1 <- plot_skeleton(df, mean_gini) +
  labs(colour = "% of teams receiving funding",
       y = "Gini of current resources", x = NULL)

  p2 <- plot_skeleton(df, mean_cumulative_gini) +
    labs(colour = "% of teams receiving funding",
         y = "Gini of total resources",
         x = "Step")
  
  p3 <- plot_skeleton(df, mean_sharing) +
    labs(colour = "% of teams receiving funding",
         y = "% of teams sharing data", x = NULL) 
  
  p3 / p1 / p2 +
    plot_layout(guides = "collect") +
    plot_annotation(tag_levels = "A") & theme(legend.position = "top")
}
```


# No network
```{r fig.width=7, fig.height=9}
#| label: fig-no-network
#| fig-cap: Gini index and % of groups sharing data dependent on grant size with no network.

summarised_data %>% 
  filter(network == "none") %>% 
  summary_plot()
```


# Random network
```{r fig.width=7, fig.height=9}
#| label: fig-random-network
#| fig-cap: Gini index and % of groups sharing data dependent on grant size with random network.

summarised_data %>% 
  filter(network == "random") %>% 
  summary_plot()
```



# Clustered network
```{r fig.width=7, fig.height=9}
#| label: fig-clustered-network
#| fig-cap: Gini index and % of groups sharing data dependent on grant size with clustered network.

summarised_data %>% 
  filter(network == "clustered") %>% 
  summary_plot()
```


# Fragmented network
```{r fig.width=7, fig.height=9}
#| label: fig-fragmented
#| fig-cap: Gini index and % of groups sharing data dependent on grant size with fragmented network.

summarised_data %>% 
  filter(network == "fragmented") %>% 
  summary_plot()
```



## Analysis/Interpretation
Introducing network effects does change results. Where in the initial model with
no network, teams would settle at quite high levels of sharing, even for 
scenarios with low rates of funding, levels of sharing are lower for all cases
with networks. The distributions of resources according to the Gini follow the
same patterns, albeit at slightly different levels.

For the case of a random network, equilibria are not very stable. Under highly
competitive funding, the initial stage of the simulation shows large swings in
the rate of teams sharing data - from no-one sharing data to 80% of teams 
sharing data, back to 5% of teams sharing data to 75% of teams sharing data,
and so forth. Eventually, the rates of sharing settle onto unstable equilibria 
that reflect the level of funding selectivity: for the case of 10% of teams
receiving funding, about 10-15% of teams share data, for the case of 20% of
teams receiving funding, about 25% of teams share data, and so on.

The same patterns of large initial swings and eventual equilibria hold true for
the clustered and the fragmented network topology. 


HIGHLY INTERESTING OBSERVATION: in the fragmented network, it is mostly those 
teams which are not well-connected that keep sharing data (in line with the
general findings). Is it then also those that receive more funding?
Need to compare with centrality measures.

This might be the reason, why the means that we show are much smoother for the 
fragmented network, compared to the clustered, and especially the random network:
in the fragmented network, the types of nodes sharing data are quite similar
across runs, because there is a strong difference in degree between the nodes.
In the clustered, and more so in the random network, there are not so big 
differences in degree, and thus there is more variability in who shares.


```{r}
spark_disconnect(sc)
```

